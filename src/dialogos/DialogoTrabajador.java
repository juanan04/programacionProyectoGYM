/*
 *  Diálogo Trabajador
 */
package dialogos;

import clases.Gym;
import clases.Persona;
import clases.Trabajador;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import visualGrafica.paginaMain;

/**
 *
 * @author Juan Antonio
 */
public class DialogoTrabajador extends javax.swing.JDialog {

    /*Declaramos atributos*/
    private Gym gym;
    private String tipo; // Saber el tipo de acción a realizar (Actualizar o Añadir)
    private paginaMain pagPri;
    public DefaultComboBoxModel<Persona> modeloComboPersona = new DefaultComboBoxModel<>();

    public DialogoTrabajador(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        gym = ((paginaMain) parent).getGym();
        this.pagPri = (paginaMain) parent;
        initComponents();
    }

    /*Métodos*/
    // Método para saber la acción que se va ha realizar
    public void tipoAccion(String tipo) {
        this.tipo = tipo;
        /*Establecemos los datos de */
        txtTitulo.setText(tipo);
        botonAceptar.setText(tipo);
        if (!tipo.equals("Actualizar")) {
            labelCombo.setText("Seleccione un nuevo Trabajador:");
            personasDeCombo();
        } else if (tipo.equals("Actualizar")) {
            labelCombo.setText("Trabajador Seleccionado:");
            Trabajador actualizarTrabajador = pagPri.getSelectedTrabajadorListaDatos();
            DefaultComboBoxModel modeloComboActualizar = new DefaultComboBoxModel(); // Combo solamente para la persona seleccionada
            Persona perSelect = new Persona(
                    actualizarTrabajador.getNombre(),
                    actualizarTrabajador.getApellidos(),
                    actualizarTrabajador.getDni(),
                    actualizarTrabajador.getFechaNacimiento(),
                    actualizarTrabajador.getSexo());
            modeloComboActualizar.addElement(perSelect); //  Añadimos la persona escogida
            comboPersona.setModel(modeloComboActualizar);
            textSueldo.setText(Double.toString(actualizarTrabajador.getSueldo()));
            textEspecialidad.setText(actualizarTrabajador.getEspecialidad());
        }

    }

    // Método para añadir a las personas en el JComboBox
    public void personasDeCombo() {
        modeloComboPersona.removeAllElements();
        for (Persona pe : gym.getPersonas()) {
            modeloComboPersona.addElement(pe);
        }
        comboPersona.setModel(modeloComboPersona);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtTitulo = new javax.swing.JLabel();
        botonVolver = new javax.swing.JButton();
        labelCombo = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textSueldo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        textEspecialidad = new javax.swing.JTextField();
        botonAceptar = new javax.swing.JButton();
        comboPersona = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(599, 320));

        jPanel1.setBackground(new java.awt.Color(255, 204, 153));

        txtTitulo.setFont(new java.awt.Font("Source Serif Pro", 1, 36)); // NOI18N
        txtTitulo.setText("Añadir");

        botonVolver.setText("Volver");
        botonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVolverActionPerformed(evt);
            }
        });

        labelCombo.setText("Seleccione la persona:");

        jLabel3.setText("Sueldo:");

        jLabel4.setText("Especialidad:");

        botonAceptar.setText("Aceptar");
        botonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarActionPerformed(evt);
            }
        });

        jLabel1.setText("€/mes");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonVolver)
                            .addComponent(labelCombo))
                        .addGap(129, 129, 129)
                        .addComponent(txtTitulo)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboPersona, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(textSueldo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(textEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addComponent(botonAceptar)))
                                .addGap(0, 109, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(botonVolver)
                        .addGap(40, 40, 40)
                        .addComponent(labelCombo)))
                .addGap(15, 15, 15)
                .addComponent(comboPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textSueldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(textEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(botonAceptar)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVolverActionPerformed
        this.dispose();
    }//GEN-LAST:event_botonVolverActionPerformed

    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarActionPerformed
        if (tipo != null) {
            if (tipo.equals("Añadir")) {
                try {
                    Trabajador nuevo = new Trabajador();
                    Persona personaElegida = (Persona) modeloComboPersona.getSelectedItem();
                    nuevo.setNombre((String) personaElegida.getNombre());
                    nuevo.setApellidos((String) personaElegida.getApellidos());
                    nuevo.setDni((String) personaElegida.getDni());
                    nuevo.setFechaNacimiento(personaElegida.getFechaNacimiento());
                    nuevo.setSexo(personaElegida.getSexo());
                    nuevo.setSueldo(Double.parseDouble(textSueldo.getText()));
                    nuevo.setEspecialidad(textEspecialidad.getText());
                    gym.getTrabajadores().add(nuevo);
                    pagPri.getModeloLista().addElement(nuevo);
                    JOptionPane.showMessageDialog(
                            null,
                            "El trabajador ha sido añadido con éxito",
                            "Cambio Realizado",
                            JOptionPane.INFORMATION_MESSAGE
                    );
                } catch (NullPointerException e) {
                    JOptionPane.showMessageDialog(this,
                            "Error al añadir el trabajador: " + e.getMessage(),
                            "Error",
                            JOptionPane.ERROR_MESSAGE
                    );
                }
            } else if (tipo.equals("Actualizar")) {
                try {
                    Trabajador actualizarTrabajador = pagPri.getSelectedTrabajadorListaDatos();
                    actualizarTrabajador.setNombre(actualizarTrabajador.getNombre());
                    actualizarTrabajador.setApellidos(actualizarTrabajador.getApellidos());
                    actualizarTrabajador.setDni(actualizarTrabajador.getDni());
                    actualizarTrabajador.setFechaNacimiento(actualizarTrabajador.getFechaNacimiento());
                    actualizarTrabajador.setSexo(actualizarTrabajador.getSexo());
                    actualizarTrabajador.setSueldo(Double.parseDouble(textSueldo.getText()));
                    actualizarTrabajador.setEspecialidad(textEspecialidad.getText());
                    JOptionPane.showMessageDialog(
                            null,
                            "Se ha actualizado al trabajador con éxito",
                            "Cambio Realizado",
                            JOptionPane.INFORMATION_MESSAGE
                    );
                } catch (NullPointerException e) {
                    JOptionPane.showMessageDialog(this,
                            "Error al actualizar el trabajador: " + e.getMessage(),
                            "Error",
                            JOptionPane.ERROR_MESSAGE
                    );
                }
            }
        }
        dispose();
    }//GEN-LAST:event_botonAceptarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogoTrabajador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogoTrabajador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogoTrabajador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogoTrabajador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogoTrabajador dialog = new DialogoTrabajador(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton botonVolver;
    private javax.swing.JComboBox<Persona> comboPersona;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelCombo;
    private javax.swing.JTextField textEspecialidad;
    private javax.swing.JTextField textSueldo;
    private javax.swing.JLabel txtTitulo;
    // End of variables declaration//GEN-END:variables
}
